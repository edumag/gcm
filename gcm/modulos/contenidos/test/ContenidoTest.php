<?php
// Call ContenidoTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "ContenidoTest::main");
}

// Borramos contenido temporal si lo hay;

if ( file_exists('/tmp/tests')  ) system('rm -fr /tmp/tests') ;

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once '../lib/Contenido.php';

/**
 * Test class for Contenido.
 * Generated by PHPUnit_Util_Skeleton on 2010-03-12 at 18:17:48.
 */
class ContenidoTest extends PHPUnit_Framework_TestCase {

   public $c ;             ///< Instancia de Contenido
   public $dir;            ///< Directorio temporal para las pruebas

    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("ContenidoTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
   protected function setUp() {

      $this->dir = '/tmp/tests/';

      if ( ! file_exists($this->dir)  ) mkdir($this->dir);

      chdir($this->dir);

      if ( ! file_exists($this->dir.'log')  ) mkdir($this->dir.'log');

      $this->c = new Contenido();

    }


    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
      //if ( file_exists($this->dir)  ) system('rm -fr '.$this->dir) ;
    }

    /** Creamos nueva seccion 'seccion' */

    public function testNuevaSeccion() {

       $this->assertTrue($this->c->nuevaSeccion($this->dir.'seccion'),'Creamos nueva secciÃ³n');

    }

    /** Guardar contenido */

    public function testEscribirArchivo() {

       $this->assertTrue($this->c->escribirArchivo($this->dir.'seccion/prueba_test.html','<p>Contenido de ejemplo</p>'), 'Comprobar disponibilidad de archivo');

    }

    /** Copiamos 'seccion' a 'seccion_copiada' */

    public function testCopiarDirectorio() {

       $this->assertTrue($this->c->copiarDirectorio($this->dir.'seccion',$this->dir.'seccion_copiada'));
    }

    /**
     * @todo Implement testDir_array().
     */
    public function testDir_array() {

       $array_con_contenido = $this->c->dir_array($this->dir);
       $this->assertFalse(empty($array_con_contenido));

    }

    /** Eliminamos 'seccion' */

    public function testEliminarDirectorio() {

       $this->assertTrue(file_exists($this->dir.'seccion'));

       $this->c->eliminarDirectorio($this->dir.'seccion');

       $this->assertFalse(file_exists($this->dir.'seccion'));

    }

}

// Call ContenidoTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "ContenidoTest::main") {
    ContenidoTest::main();
}
?>
